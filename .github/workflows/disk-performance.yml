name: Disk Performance Tests

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run weekly on Sundays at 02:00 UTC
    - cron: '0 2 * * 0'

jobs:
  disk-performance:
    name: Disk Performance Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-15, macos-15-intel]
        include:
          - os: ubuntu-latest
            platform: "Ubuntu x86_64"
          - os: ubuntu-24.04-arm
            platform: "Ubuntu ARM64"
          - os: macos-15
            platform: "macOS 15"
          - os: macos-15-intel
            platform: "macOS 15 intel"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      

    - name: Install FIO
      run: |
        echo "=== Installing FIO ==="
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y fio
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          brew install fio
        fi
        
        echo "FIO version:"
        fio --version
        echo ""
      
    - name: System Information
      run: |
        echo "=== System Information ==="
        echo "Platform: ${{ matrix.platform }}"
        echo "Runner OS: ${{ runner.os }}"
        echo "Architecture: $(uname -m)"
        echo "Kernel: $(uname -r)"
        if command -v lscpu >/dev/null 2>&1; then
          echo "CPU Info:"
          lscpu | head -20
        elif command -v sysctl >/dev/null 2>&1; then
          echo "CPU Info (macOS):"
          sysctl -n machdep.cpu.brand_string
          sysctl -n hw.ncpu
          sysctl -n hw.memsize | awk '{print "Memory: " $1/1024/1024/1024 " GB"}'
        fi
        echo "Disk space:"
        df -h
        echo ""
    
    - name: Sequential Write Performance (Large Files)
      run: |
        echo "=== Sequential Write Performance Tests ==="
        
        # 4GB Sequential Write Test
        echo "Running 4GB sequential write test..."
        fio --name=seq_write_4gb \
            --ioengine=sync \
            --rw=write \
            --bs=4M \
            --size=4G \
            --numjobs=1 \
            --runtime=300 \
            --group_reporting \
            --filename=fio_seq_write_4gb \
            --output-format=normal
        
        rm -f fio_seq_write_4gb
        echo ""
        
        # 8GB Sequential Write Test with different block size
        echo "Running 8GB sequential write test (8M blocks)..."
        fio --name=seq_write_8gb \
            --ioengine=sync \
            --rw=write \
            --bs=8M \
            --size=8G \
            --numjobs=1 \
            --runtime=600 \
            --group_reporting \
            --filename=fio_seq_write_8gb \
            --output-format=normal
        
        rm -f fio_seq_write_8gb
        echo ""
    
    - name: Sequential Read Performance (Large Files)
      run: |
        echo "=== Sequential Read Performance Tests ==="
        
        # Create test files first
        echo "Creating 6GB test file for read tests..."
        fio --name=create_file \
            --ioengine=sync \
            --rw=write \
            --bs=8M \
            --size=6G \
            --numjobs=1 \
            --filename=fio_read_test_6gb \
            --output-format=terse > /dev/null
        
        # Sequential read test
        echo "Running 6GB sequential read test..."
        fio --name=seq_read_6gb \
            --ioengine=sync \
            --rw=read \
            --bs=4M \
            --size=6G \
            --numjobs=1 \
            --runtime=300 \
            --group_reporting \
            --filename=fio_read_test_6gb \
            --output-format=normal
        
        rm -f fio_read_test_6gb
        echo ""
        
        # Larger read test
        echo "Creating 10GB test file for large read test..."
        fio --name=create_large_file \
            --ioengine=sync \
            --rw=write \
            --bs=16M \
            --size=10G \
            --numjobs=1 \
            --filename=fio_read_test_10gb \
            --output-format=terse > /dev/null
        
        echo "Running 10GB sequential read test..."
        fio --name=seq_read_10gb \
            --ioengine=sync \
            --rw=read \
            --bs=8M \
            --size=10G \
            --numjobs=1 \
            --runtime=600 \
            --group_reporting \
            --filename=fio_read_test_10gb \
            --output-format=normal
        
        rm -f fio_read_test_10gb
        echo ""
    
    - name: Random I/O Performance Tests
      run: |
        echo "=== Random I/O Performance Tests ==="
        
        # Random write test (smaller size for random I/O)
        echo "Running 2GB random write test (4K blocks)..."
        fio --name=rand_write_2gb \
            --ioengine=sync \
            --rw=randwrite \
            --bs=4K \
            --size=2G \
            --numjobs=1 \
            --runtime=300 \
            --group_reporting \
            --filename=fio_rand_write_2gb \
            --output-format=normal
        
        rm -f fio_rand_write_2gb
        echo ""
        
        # Random read test
        echo "Creating 3GB file for random read test..."
        fio --name=create_rand_read_file \
            --ioengine=sync \
            --rw=write \
            --bs=1M \
            --size=3G \
            --numjobs=1 \
            --filename=fio_rand_read_3gb \
            --output-format=terse > /dev/null
        
        echo "Running 3GB random read test (4K blocks)..."
        fio --name=rand_read_3gb \
            --ioengine=sync \
            --rw=randread \
            --bs=4K \
            --size=3G \
            --numjobs=1 \
            --runtime=300 \
            --group_reporting \
            --filename=fio_rand_read_3gb \
            --output-format=normal
        
        rm -f fio_rand_read_3gb
        echo ""
    
    - name: Mixed Read/Write Performance Tests
      run: |
        echo "=== Mixed Read/Write Performance Tests ==="
        
        # Mixed random I/O (70% read, 30% write)
        echo "Running 4GB mixed random I/O test (70% read, 30% write)..."
        fio --name=mixed_rw_4gb \
            --ioengine=sync \
            --rw=randrw \
            --rwmixread=70 \
            --bs=4K \
            --size=4G \
            --numjobs=1 \
            --runtime=300 \
            --group_reporting \
            --filename=fio_mixed_rw_4gb \
            --output-format=normal
        
        rm -f fio_mixed_rw_4gb
        echo ""
        
        # Sequential mixed I/O
        echo "Running 5GB sequential mixed I/O test (80% read, 20% write)..."
        fio --name=seq_mixed_5gb \
            --ioengine=sync \
            --rw=rw \
            --rwmixread=80 \
            --bs=1M \
            --size=5G \
            --numjobs=1 \
            --runtime=400 \
            --group_reporting \
            --filename=fio_seq_mixed_5gb \
            --output-format=normal
        
        rm -f fio_seq_mixed_5gb
        echo ""
    
    - name: Concurrent I/O Stress Tests
      run: |
        echo "=== Concurrent I/O Stress Tests ==="
        
        # Multiple jobs sequential write
        echo "Running concurrent sequential write test (4 jobs, 2GB each)..."
        fio --name=concurrent_seq_write \
            --ioengine=sync \
            --rw=write \
            --bs=4M \
            --size=2G \
            --numjobs=4 \
            --runtime=400 \
            --group_reporting \
            --filename_format='fio_concurrent_seq_$jobnum' \
            --output-format=normal
        
        rm -f fio_concurrent_seq_*
        echo ""
        
        # Multiple jobs random I/O
        echo "Running concurrent random I/O test (3 jobs, 1.5GB each)..."
        fio --name=concurrent_rand_rw \
            --ioengine=sync \
            --rw=randrw \
            --rwmixread=60 \
            --bs=64K \
            --size=1536M \
            --numjobs=3 \
            --runtime=300 \
            --group_reporting \
            --filename_format='fio_concurrent_rand_$jobnum' \
            --output-format=normal
        
        rm -f fio_concurrent_rand_*
        echo ""
    
    - name: Latency and IOPS Tests
      run: |
        echo "=== Latency and IOPS Tests ==="
        
        # Low latency test with small blocks
        echo "Running low latency test (4K random read)..."
        fio --name=latency_test \
            --ioengine=sync \
            --rw=randread \
            --bs=4K \
            --size=1G \
            --numjobs=1 \
            --runtime=120 \
            --iodepth=1 \
            --group_reporting \
            --filename=fio_latency_test \
            --output-format=normal
        
        rm -f fio_latency_test
        echo ""
        
        # High IOPS test
        echo "Running high IOPS test (4K random write)..."
        fio --name=iops_test \
            --ioengine=sync \
            --rw=randwrite \
            --bs=4K \
            --size=2G \
            --numjobs=2 \
            --runtime=180 \
            --iodepth=1 \
            --group_reporting \
            --filename_format='fio_iops_$jobnum' \
            --output-format=normal
        
        rm -f fio_iops_*
        echo ""
    
    - name: Block Size Comparison Tests
      run: |
        echo "=== Block Size Comparison Tests ==="
        
        # Test different block sizes for sequential write
        for bs in 4K 16K 64K 256K 1M 4M; do
          echo "Testing sequential write with ${bs} block size (2GB file)..."
          fio --name=blocksize_test_${bs} \
              --ioengine=sync \
              --rw=write \
              --bs=${bs} \
              --size=2G \
              --numjobs=1 \
              --runtime=180 \
              --group_reporting \
              --filename=fio_blocksize_${bs} \
              --output-format=normal
          
          rm -f fio_blocksize_${bs}
          echo ""
        done
    
    - name: Storage Endurance Test
      run: |
        echo "=== Storage Endurance Test ==="
        
        # Sustained write test
        echo "Running sustained write endurance test (6GB over extended time)..."
        fio --name=endurance_test \
            --ioengine=sync \
            --rw=write \
            --bs=1M \
            --size=6G \
            --numjobs=1 \
            --runtime=600 \
            --time_based \
            --group_reporting \
            --filename=fio_endurance_test \
            --output-format=normal
        
        rm -f fio_endurance_test
        echo ""
    
    - name: Final System Status
      run: |
        echo "=== Final System Status ==="
        echo "Available disk space after all tests:"
        df -h .
        
        echo ""
        echo "System load after intensive I/O tests:"
        if command -v uptime >/dev/null 2>&1; then
          uptime
        fi
        
        # Memory usage
        echo ""
        echo "Memory usage:"
        if command -v free >/dev/null 2>&1; then
          free -h
        elif command -v vm_stat >/dev/null 2>&1; then
          vm_stat
        fi
        
        echo ""
        echo "All FIO disk performance tests completed on ${{ matrix.platform }}"
        echo "Test Summary:"
        echo "- Sequential Write/Read tests up to 10GB"
        echo "- Random I/O tests with various block sizes"
        echo "- Mixed workload tests"
        echo "- Concurrent stress tests"
        echo "- Latency and IOPS benchmarks"
        echo "- Block size comparison analysis"
        echo "- Storage endurance testing"
    
    - name: Generate Test Summary
      if: always()
      run: |
        echo "=== FIO Test Summary for ${{ matrix.platform }} ==="
        echo "Platform: ${{ matrix.platform }}"
        echo "Runner: ${{ runner.os }}"
        echo "Timestamp: $(date -u)"
        echo "Repository: ${{ github.repository }}"
        echo "Commit: ${{ github.sha }}"
        echo "All FIO-based disk performance tests completed successfully"
